version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: ojg78k.m02a8qfingwywebv # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFvV2dXSkRjdFd0SVo4SC9hejdxMmNNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5UQTBNamN3TVRBd016VmFGdzB6TlRBME1qVXdNVEF3TXpWYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBaXpnQldIL2FsV2s1bTBobFNySjF6TkNaZ2hSQlV6dXNvUndzCnRmWWROMjJqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVeEVTamdaWDdlMmhQYjY4SQoyUmFIS1EvQUh3VXdCUVlESzJWd0EwRUEyUGhnVmNrd3lFdDhwZ2lXVThqdldXd2E5TDE2V1JNaWtJREpnaHZWCnNCYUhwT2JEdXpmY2QwSk5kc1piN1BHeWFvbzBlZlJkb2MwVnBUVFBmb05lQ2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS1l3a1ZqdEtrZ3ZHZmd6R2tkVHhzWmZBY0R2dE5aaEJWQ1diSStvQmFOeAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.32.3 # The `image` field is an optional reference to an alternative kubelet image.
        # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: "true"
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # `interfaces` is used to define the network interface configuration.
        interfaces:
            - # Picks a network device using the selector.
              deviceSelector:
                physical: true # Select only physical devices.
              dhcp: true # Indicates if DHCP should be used to configure the interface.
              # Virtual (shared) IP address configuration.
              vip:
                ip: 192.168.100.130 # Specifies the IP address to be used.
              
              # # The interface name.
              # interface: enp0s3

              # # Assigns static IP addresses to the interface.
              # addresses:
              #     - 10.5.0.0/16
              #     - 192.168.3.7

              # # A list of routes associated with the interface.
              # routes:
              #     - network: 0.0.0.0/0 # The route's network (destination).
              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).
              #     - network: 10.2.0.0/16 # The route's network (destination).
              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).

              # # Bond specific options.
              # bond:
              #     # The interfaces that make up the bond.
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     # Picks a network device using the selector.
              #     deviceSelectors:
              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
              #           driver: virtio_net # Kernel driver, supports matching by wildcard.
              #     mode: 802.3ad # A bond option.
              #     lacpRate: fast # A bond option.

              # # Bridge specific options.
              # bridge:
              #     # The interfaces that make up the bridge.
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     # Enable STP on this bridge.
              #     stp:
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

              # # Configure this device as a bridge port.
              # bridgePort:
              #     master: br0 # The name of the bridge master interface

              # # DHCP specific options.
              # dhcpOptions:
              #     routeMetric: 1024 # The priority of all routes received via DHCP.

              # # Wireguard specific configuration.

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     listenPort: 51111 # Specifies a device's listening port.
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
        
        # # Used to statically set the nameservers for the machine.
        # nameservers:
        #     - 8.8.8.8
        #     - 1.1.1.1

        # # Used to statically set arbitrary search domains.
        # searchDomains:
        #     - example.org
        #     - example.com

        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: factory.talos.dev/installer/ce4c980550dd2ab1b17bbf2b08801c7eb59418eafe8f279833297925d67c7515:v1.9.4 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: H1rugN5qBNgTjB5q3P_HOAQZJ5RiCvSHkyUdrkS9gDc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: sE1AbN1OL5eC8TsfF+fFw1pLGkyRF7OLxkOh/Qywimo= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.100.130:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos-k8s # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: rkoaux.xins3mg8b5r4m0l7 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: hGdS9jX85+7YgFfFJMLyJavSywufmFM1utTYMdC/pLA= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRSitxenZwdVRTU25TWG96NFhtbzlzakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNRFF5TnpBeE1EQXpOVm9YRFRNMU1EUXlOVEF4TURBegpOVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSGorUmVHMkNqd0Rvc1FTLzltZE80M0V3Y3lCWmRvTmRqMVgvWWFaVTY5cWdoVEFhTUtMOHZyczFwaXEKSHFseHlsQnV0c3VpM3VLOXVST1F0QlByc1ZPallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVqM0g2azJLSGgycVdCNGNpVGxaMFNNS0ZTN293Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnSnFKdnhWS3AKM2FlTDNITW9vODBJUWdRVk1OUFh0S0VrbjBMbjBQVHZ6OEVDSVFDWmxTSFdwZlhna3hQZWJlWXBudWEvdmxxeQpza3hFUU05YWRlczh4Ykl2Z0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9veGFWbGRmTmR4U0ZMTkg5a2s2U1dkcjRaMitPc0RoUWZBMTAxaXZKN0VvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZVA1RjRiWUtQQU9peEJMLzJaMDdqY1RCeklGbDJnMTJQVmY5aHBsVHIycUNGTUJvd292eQordXpXbUtvZXFYSEtVRzYyeTZMZTRyMjVFNUMwRSt1eFV3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQUljakpFL01QUG9IUTJmK2NtNTFjdTB3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5UQTBNamN3TVRBd016VmFGdzB6TlRBME1qVXdNVEF3TXpWYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVQ2MlR0WUpJNkgvK1pGUVJ6NGV3cGNsZmNpcjQ3eTA4TFdESUo5eFlnOEdmWUc3UjJRClV5RlFtNzllMGJaR1RIZjVDOUdGTnFGUnBDbjJMa1BoNy9hdG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGUFBpZUhGN0FDcXRSQy83WDFOenRRVmJ0UHkzTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklGTzhKczN6clBQV0t4eUliVng5RTdtRFZ6RVdHRllaZUE2c3JJZThPWFUzQWlFQW9sOTFhVUkzcDI5S1IyN28KVWNhNGtGczNNa1dseEtvaXVaZUw2ak13OENnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJXNmUycklBdjlYTkltZFZlNEdOV0VYeGlVT2Y2SC91MWJrNVdZQldIU3BvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK3RrN1dDU09oLy9tUlVFYytIc0tYSlgzSXErTzh0UEMxZ3lDZmNXSVBCbjJCdTBka0ZNaApVSnUvWHRHMlJreDMrUXZSaFRhaFVhUXA5aTVENGUvMnJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeDAzRy9lcmV5azRJNkExY1pRbktFVVN0TmM5Qi9MQXZVeHFRME9PcEFheU0zSkNUCmNWN00xOStGNUU2WnRDQk9DNm1SNXgzKzhNMUVGcnNyeTZzS2FkKzdjN29BeThWamhYSUpBdVNINUVBVzRDYkYKSW90WE90UUdVd2NZM0pkVWM0WnNSS0VId0NJc3RlTGJoY3pMZkNpSll4TWJCNnc4S28wRXJOdmZIc2dSZXlZNwpjaThZSUxMWWxLZloxVVRMODUzbTB0bjdPVWlXbzJ0UlFnR2NyU1FyK3dzZ2Z3MHdFUHFkenJBMEg2bkZyTjVkCnJKUlU1QU84SEZqRFp3Snl2L243VmtPbmFpREVVTmE0NkdDL3JBSmZ0eTYwdW5wRzQxcTN3Y0FXN0pYZDA2M1AKWXU3SXI3UXpiM1FlL1VlYkVkR2p0Zkt6alZyZEhSdENuK0JjVk1adzJ5RkJKeXJXKyt6UWVMTDdqdlk0NEZzYQpKY0xxZEhhTzFxbzNMUjFBUTI3NmdjdlhNaDFPSzVWbXg2bU01YkorenJ1VkFBZndXWExTcndsdm92VDFvYXVGCjZGSWF2TGNacjBEOHIycnRsODllUy9xMWM5dVh3Snl3QmZKSllZSWppZFBUOERkM0FWOU9neGtFelFQR1pMZXcKK05uaGFMNTd5QzQzbndxTzI4ajNON2UyNXoxdlJISHVhbGtxbFlCZEE5cjlCTFc3WjRMWmVVVGZXbEJGM21WTgpjZ3ZMUlBrb09JM3BoNDRkNU1lMTFmUkt4T3ZGemY1TTBlWGc0UjdwNVpqS1VFRjhWc3FaV05ZblRtTWY2aDVqCjN1NVhsQzJFbTVwOXpScmxncTFnZE9HOUlPdWdOQXMrRG5ZeTdxOGlTYzlQYlNMVHUyM09qUmFxTWZFQ0F3RUEKQVFLQ0FnQWlldGcwVVkvZG5BWjZidVZQTFpSaHpHblM1MXBaSnZuby9LMlZGZTNGTmw3Z1FicmdZREE4SUpWLwpYQUhIWWRkZXVTVmV3SmU4ZlNhTWNERXhlUlBDSVV6Q3hxa2dsN09TQUpxQ2Y1cnE2Qk9ORCtnSEEraEJhekQwCjZFTnExbHRyNlJPT0EvWGRUWXhDbzA2ckpUVUc4OVJnNll0QmxwQ0tJLzl0RUZUWGRIRmh4c2wrQlp1OC9IUHYKcytKQnZUY3puRnUwbXJXVndYTWVMcERPUkkwZ2Z5T0V1UFlVUk9uTjVpMnE5bHp1SldibmMwanRkSFFEUm9vaQp0VkNJMzZtT2dPYjBrNXZCQm80d0ZoWERUZ21hN29ZMG9NWHZoUHdDbFUwNUhjeFpmY3YwdFJzdDJIV3J3QmN0Cjd2NzFmby9iVTFOcFJPVy9UTHI0TUNFa202SWRVaW1Cb2VyMGlzdDY1S2dUa2E5NjBnMUpSZGRaVHdvVGZ0dEEKRmx2OEhWdnpMNlpNdFNjcUVOdldFakhaYVR2THBTRGVkdmVhTVZKTFlPSmFFU0FINFdRcHZoSE8xQ1BsRXlybQpoOW84bnlqV3NNVFAwVnZJazFIdUFYcnRyWWkzUlUzV1B4VWZHcEtuNStFalhwSERIbWE2YWJ1RlY5YW84SUwyCldzMENTRFNSM05wWkc4YnBkMmxyMmxFZ2dkYTE1Ykx4UGt1SGZZM2VobVVCYUNLNjc3TFdkcmVpcmMxTy9Ndk8Kd2FiUHZ3bkJwTVVVeTV3Ym1wWmtJNjhJS3phbWx5R3pDWWlSdmJmdDRGbE9nZU4raFQ0T00wOWVxZGp4dWRGQgpQS1NKTWNJZENsN0h2SjlGOTVOc0VrMlRvMUtGaHhDMFhZSkIyTXg1VFd2bUtHYXNBUUtDQVFFQTB4YXRBQlRhCkxsU09pR0d5SGlIbGRrbzVQMzhVZkJkSW1JdFVMRDhsRk1NSFQra2R4dWVqMXZhbFpBOWNqTlpaQmlZbmV6YkkKZlo1OVBFc3JqUnZnVmxJYkdDaWI2Yk1mTm1VU3dFM3NoWDE3VzdUYVJBUnAwNGRRdENNV2p2OVhKMnpkaFp0KwpBazByR0dsK25yRzNlR0V4cThyTWFOYXJ2UW1JS0t1YzEzM0R1ajh3NGlsQjBka1ZpZ0ZDRkNZN1EzQ1dSckdRCmpLc1oxNG9zaCtTOGRjUG9Fa0s5clBxbVNhNHNPdzJUUzYzd3F2U1dCU0lWa3lLbEc3QzlWUlRYWitoUjQwMEEKclFtVmp3a3JESmFxb1ZJVXJSNVhOMDdNNzdZMXVNVGFHY0FqWGhsY3JvODE0QnlyOHRSbXJWL25ESFdGaU1BVwowSkNpeGJOY0JNMStFUUtDQVFFQThiVTVIYTdBWHRGVFBpbC9tVUNGTkJDSlVzWk5naTBkSCsxbi9rTEJ5RVh6CkJSR1FNaS9WUXk3Y2NZN0tkZzJqbzBJSjFiUWdUdTBZNE9xRit5eG5yMDBSWXIxVU9LZ1N3UGM1M0dHSDErY2IKQS85cFd3ZXkyaFVEYUVmejhEZlMydGk3ZFRTOUxUaVh4QzhqZG5Yb2JaZzFuQzRWOTZoU1hJZ3RZSGJPR3VOWQo5bCsrY1h1bEwrbTk3VWN1K2UvbTVVRE9qT3FqM2lsR0h6SUt2SjFYWmNlWGpFeTlNRmtHSThrVm8yNDc3YS90ClNCY1BQUWt1dUkyRFBwSGd3NVRFNWpDSmtOU0c3OXJ4ZEhzR2tEYm0yRk1uQXcwSnlZN1JCZ09kaEw5ZGhuZTQKNUZrUW9Idlk2dURoZzZBZC9Nd2xpZzcvZVFoSTF5ZU1OOUVOVEVjVjRRS0NBUUVBdGZwZmpLbHRhdkdrcXppbQpLTW9LR3c5a0NUU1NRV1NGUmxVZmJNSEhRdjNicU8yTXFUUjdqOCsweCsxaVdWeFZCVE1SYUd6VExWRGNJSVdoCmR4WW9NZUs0enZ2N1pkN3hNcUN5S0sxRkVkUWE2L1dmRVhKSWxYNmJlYUNpU3djZ2FMRzJ5LzlBQTlYcEtET1MKWUZkUGwyMGJPRUl1Tk5lVTJQU0Z1S0l5SmFpYmUwNE00M3l6N0toY3BFdnZYcFdURTlIVkMvNzZZZnNEM1VpVwptVlQ5ai8wamJkS3gySldCbEJXZXRnNC9CTWhncWRFUUlEN0JJTWFHVnJmb2taZlZHQlExdkdKZkNjNHdiRTU0CkdYTXVpTUxOWm0yNHZNcW5iS1RGN1pOdmZ6R2dpL2dMYWNXMnFZMnVRenNQaGJvZTR5UFJ5aEhuMlVoSHUyNmsKRHRQbE1RS0NBUUVBN0YwanRYc21jNUtQck1JNEhVMlM5UThXdXZOZzZHUGxqMHRCM3NxNVpYZkI1cnIrSDVYWApIeE84VHZBcjNMWUp4NlRVcVQ2ME9YcHlVY0FGdFZIL010WlNvaFF6UUJSY0FvZkE5Vm9LMVg4U1ZCNTRrS1ErCnFqVFNXQy9FeEt4U2JlQnpzSElhYlJaaWsxN2xkdnBtaUlYSUp5cUtJTjFoYlV0ZDFHOVpyY0dWUlpqclMxNTIKY3h4SXRyaGRuOXlTRnE0QlRweEdFd0tacC9mdnQvTEZmS3BwOExFNmNRVWRrL0VZVC9HRWVUTUkvdTVONElvUwpQamRrbU5OZTBPT3lpTWYrUHJzV0dZZ3BocGFvSEc4VDM0ZXhKcktoVjVGcHBrL3l3ZFhCUjdYY0FMRjRLUGZ6CmIvenBpeVlSTFIwVnVLUmgvNkd5V1hRN0VucEVYc3RGQVFLQ0FRQmNSa2RvQndBY3hZaG9QKy9XeFJraklkNGMKQXN0dVc3OC9ZeUNzZ3d6RUdTeWxBL3ZjVndaUURxc2dhVjF4TGR6cXhYUEZONlQzdzJ3bWUzRityMU5LT3RTVgppSlJJKzdaQ2VjcWo3cEtCaHJrdENXUWNpM1RCQTVxRjlta05yeFA2MGNwY0RBN2dLTmxuOElQNkRGQXJhb0IyCmI3SHN5MTFvc3ZqcGVHVDRKcW5PZkNRc1p5ZXlhdkNDTTZaWDNYTTF3ZHlpNS94dG5nRmpuemFaV2RxUWovME8KbmZHeURjaVJjS2VoRXE4MWFOalg4ckoyOFVzek5VcDNsSjVHUnFPZk9LZzJYMDRwcFVHbUVqdkE4UUpnalZJUAo0UWQ0NlVaMFc5UFhnQWY3ZXBpek9jajJXQnlTTjZSbmZHeEZPRE92d1JZN2pQYnd2Y04rdGZxNHQzc28KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.32.3 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.100.130
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.32.3 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.32.3 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.32.3 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRWXpiZm9EOURlRTVxakZYeElHZGpIakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTURReU56QXhNREF6TlZvWERUTTFNRFF5TlRBeE1EQXpOVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhGSGcvOGlWWUNMCjZhTlVtRjJmUjJUeHo4U1h4bVFYeE5zbGo3WmNUZk9CdFpSZ0k0OEpxbStONnJOK1NUY21SUnByUDVKenlWajAKUVREZ242aUhSSmlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMk0xRGF3UUZ5OUl3CktSR2NLRElNKzU4eXZkNHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTlBiRUpXOFhjSkFZZTdZeVdNWUJFZjYKb2trT1A1d2hpK1QxQmI2Tm8vNVFBaUJsTVpIVlZDa3BrWmEwTDhWbHo3U05wSnhDQ3ZsRHpjaVQwZDZMTlRHeApydz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUl0M1hTeEhDKzF4SUJXL1ppS2puSU50S3Z0bkluSytQZFRTV0VQbFprQTNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFY1VlRC95SlZnSXZwbzFTWVhaOUhaUEhQeEpmR1pCZkUyeVdQdGx4Tjg0RzFsR0FqandtcQpiNDNxczM1Sk55WkZHbXMva25QSldQUkJNT0NmcUlkRW1BPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.19

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests:
        - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml
        - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.0 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    # allowSchedulingOnControlPlanes: true
