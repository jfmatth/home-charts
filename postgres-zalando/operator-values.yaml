# image:
#   registry: registry.opensource.zalan.do
#   repository: acid/postgres-operator
#   tag: v1.10.0
#   pullPolicy: "IfNotPresent"

# # Optionally specify an array of imagePullSecrets.
# # Secrets must be manually created in the namespace.
# # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# # imagePullSecrets:
# # - name: myRegistryKeySecretName

# podAnnotations: {}
# podLabels: {}

# configTarget: "OperatorConfigurationCRD"

# # JSON logging format
# enableJsonLogging: false

# # general configuration parameters
# configGeneral:
#   # the deployment should create/update the CRDs
#   enable_crd_registration: true
#   # specify categories under which crds should be listed
#   crd_categories:
#   - "all"
#   # update only the statefulsets without immediately doing the rolling update
#   enable_lazy_spilo_upgrade: false
#   # set the PGVERSION env var instead of providing the version via postgresql.bin_dir in SPILO_CONFIGURATION
#   enable_pgversion_env_var: true
#   # start any new database pod without limitations on shm memory
#   enable_shm_volume: true
#   # enables backwards compatible path between Spilo 12 and Spilo 13+ images
#   enable_spilo_wal_path_compat: false
#   # operator will sync only clusters where name starts with teamId prefix
#   enable_team_id_clustername_prefix: false
#   # etcd connection string for Patroni. Empty uses K8s-native DCS.
#   etcd_host: ""
#   # Spilo docker image
#   docker_image: ghcr.io/zalando/spilo-15:3.0-p1

#   # key name for annotation to ignore globally configured instance limits
#   # ignore_instance_limits_annotation_key: ""

#   # Select if setup uses endpoints (default), or configmaps to manage leader (DCS=k8s)
#   # kubernetes_use_configmaps: false

#   # min number of instances in Postgres cluster. -1 = no limit
#   min_instances: -1
#   # max number of instances in Postgres cluster. -1 = no limit
#   max_instances: -1
#   # period between consecutive repair requests
#   repair_period: 5m
#   # period between consecutive sync requests
#   resync_period: 30m
#   # can prevent certain cases of memory overcommitment
#   # set_memory_request_to_limit: false

#   # map of sidecar names to docker images
#   # sidecar_docker_images:
#   #  example: "exampleimage:exampletag"

#   # number of routines the operator spawns to process requests concurrently
#   workers: 8

# # parameters describing Postgres users
# configUsers:
#   # roles to be granted to database owners
#   # additional_owner_roles:
#   # - cron_admin

#   # enable password rotation for app users that are not database owners
#   enable_password_rotation: false
#   # rotation interval for updating credentials in K8s secrets of app users
#   password_rotation_interval: 90
#   # retention interval to keep rotation users
#   password_rotation_user_retention: 180
#   # postgres username used for replication between instances
#   replication_username: standby
#   # postgres superuser name to be created by initdb
#   super_username: postgres

# configMajorVersionUpgrade:
#   # "off": no upgrade, "manual": manifest triggers action, "full": minimal version violation triggers too
#   major_version_upgrade_mode: "off"
#   # upgrades will only be carried out for clusters of listed teams when mode is "off"
#   # major_version_upgrade_team_allow_list:
#   # - acid

#   # minimal Postgres major version that will not automatically be upgraded
#   minimal_major_version: "11"
#   # target Postgres major version when upgrading clusters automatically
#   target_major_version: "15"

configKubernetes:
  # list of additional capabilities for postgres container
  # additional_pod_capabilities:
  # - "SYS_NICE"

  # default DNS domain of K8s cluster where operator is running
  cluster_domain: cluster.local
  # additional labels assigned to the cluster objects
  cluster_labels:
    application: spilo
  # label assigned to Kubernetes objects created by the operator
  cluster_name_label: cluster-name
  # additional annotations to add to every database pod
  # custom_pod_annotations:
  #   keya: valuea
  #   keyb: valueb

  # key name for annotation that compares manifest value with current date
  # delete_annotation_date_key: "delete-date"

  # key name for annotation that compares manifest value with cluster name
  # delete_annotation_name_key: "delete-clustername"

  # list of annotations propagated from cluster manifest to statefulset and deployment
  # downscaler_annotations:
  # - deployment-time
  # - downscaler/*

  # allow user secrets in other namespaces than the Postgres cluster
  enable_cross_namespace_secret: false
  # enables initContainers to run actions before Spilo is started
  enable_init_containers: true
  # toggles pod anti affinity on the Postgres pods
  enable_pod_antiaffinity: false
  # toggles PDB to set to MinAvailabe 0 or 1
  enable_pod_disruption_budget: true
  # toogles readiness probe for database pods
  enable_readiness_probe: false
  # enables sidecar containers to run alongside Spilo in the same pod
  enable_sidecars: true

  # annotations to be ignored when comparing statefulsets, services etc.
  # ignored_annotations:
  # - k8s.v1.cni.cncf.io/network-status

  # namespaced name of the secret containing infrastructure roles names and passwords
  # infrastructure_roles_secret_name: postgresql-infrastructure-roles

  # list of annotation keys that can be inherited from the cluster manifest
  # inherited_annotations:
  # - owned-by

  # list of label keys that can be inherited from the cluster manifest
  # inherited_labels:
  # - application
  # - environment

  # timeout for successful migration of master pods from unschedulable node
  # master_pod_move_timeout: 20m

  # set of labels that a running and active node should possess to be considered ready
  # node_readiness_label:
  #   status: ready

  # defines how nodeAffinity from manifest should be merged with node_readiness_label
  # node_readiness_label_merge: "OR"

  # namespaced name of the secret containing the OAuth2 token to pass to the teams API
  # oauth_token_secret_name: postgresql-operator

  # defines the template for PDB (Pod Disruption Budget) names
  pdb_name_format: "postgres-{cluster}-pdb"
  # switches pod anti affinity type to `preferredDuringSchedulingIgnoredDuringExecution`
  pod_antiaffinity_preferred_during_scheduling: false
  # override topology key for pod anti affinity
  pod_antiaffinity_topology_key: "kubernetes.io/hostname"
  # namespaced name of the ConfigMap with environment variables to populate on every pod
  # pod_environment_configmap: "default/my-custom-config"
  # name of the Secret (in cluster namespace) with environment variables to populate on every pod
  # pod_environment_secret: "my-custom-secret"

  # specify the pod management policy of stateful sets of Postgres clusters
  pod_management_policy: "ordered_ready"
  # label assigned to the Postgres pods (and services/endpoints)
  pod_role_label: spilo-role
  # service account definition as JSON/YAML string to be used by postgres cluster pods
  # pod_service_account_definition: ""

  # role binding definition as JSON/YAML string to be used by pod service account
  # pod_service_account_role_binding_definition: ""

  # Postgres pods are terminated forcefully after this timeout
  pod_terminate_grace_period: 5m
  
  
  # template for database user secrets generated by the operator,
  # here username contains the namespace in the format namespace.username
  # if the user is in different namespace than cluster and cross namespace secrets
  # are enabled via `enable_cross_namespace_secret` flag in the configuration.
  # secret_name_template: "{username}.{cluster}.credentials.{tprkind}.{tprgroup}"
  secret_name_template: "{username}.{cluster}"
   
  
  
  # sharing unix socket of PostgreSQL (`pg_socket`) with the sidecars
  share_pgsocket_with_sidecars: false
  # set user and group for the spilo container (required to run Spilo as non-root process)
  # spilo_runasuser: 101
  # spilo_runasgroup: 103

  # group ID with write-access to volumes (required to run Spilo as non-root process)
  # spilo_fsgroup: 103

  # whether the Spilo container should run in privileged mode
  spilo_privileged: false
  # whether the Spilo container should run with additional permissions other than parent.
  # required by cron which needs setuid
  spilo_allow_privilege_escalation: true
  # storage resize strategy, available options are: ebs, pvc, off or mixed
  storage_resize_mode: pvc
  # pod toleration assigned to instances of every Postgres cluster
  # toleration:
  #   key: db-only
  #   operator: Exists
  #   effect: NoSchedule

  # operator watches for postgres objects in the given namespace
  watched_namespace: "*"  # listen to all namespaces
